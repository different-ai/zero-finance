'use client';

import React from 'react';
import { GrainGradient } from '@paper-design/shaders-react';

export function GradientBackground({
  className = '',
  variant = 'hero' as 'hero' | 'demo' | 'welcome',
}: {
  className?: string;
  variant?: 'hero' | 'demo' | 'welcome';
}) {
  const noise = (variant: 'hero' | 'demo' | 'welcome') => {
    switch (variant) {
      case 'hero':
        return 0.2;
      case 'demo':
        return 0.1;
      case 'welcome':
        return 0.1;
    }
  };

  const shape = (variant: 'hero' | 'demo' | 'welcome') => {
    switch (variant) {
      case 'hero':
        return 'blob' as const;
      case 'demo':
        return 'wave' as const;
      case 'welcome':
        return 'wave' as const;
    }
  };
  const offsetX = (variant: 'hero' | 'demo' | 'welcome') => {
    switch (variant) {
      case 'hero':
        return 0.9;
      case 'demo':
        return 0.3;
      case 'welcome':
        return 0.3;
    }
  };
  const offsetY = (variant: 'hero' | 'demo' | 'welcome') => {
    switch (variant) {
      case 'hero':
        return -0.5;
      case 'demo':
        return -0.3;
      case 'welcome':
        return 0;
    }
  };
  const rotation = (variant: 'hero' | 'demo' | 'welcome') => {
    switch (variant) {
      case 'hero':
        return 180;
      case 'demo':
        return -30;
      case 'welcome':
        return 0;
    }
  };
  // Blue gradient colors concentrated in top-right
  const heroColors = [
    'rgba(27, 41, 255, 0.1)', // Transparent blue
    '#4A5BFF', // Medium blue
    '#1B29FF', // Strong blue
    '#3344FF', // Vibrant blue
  ];

  const demoColors = [
    'rgba(27, 41, 255, 0.05)', // Very transparent blue
    '#4A5BFF',
    '#6677FF',
    '#1B29FF',
  ];

  const sharedProps = {
    colorBack: 'rgba(246, 245, 239, 0)', // Transparent background
    softness: 0.3, // Softer edges for better blending
    intensity: 0.1, // Slightly more intense
    // handle more than 2 variants cleanly
    noise: noise(variant),
    shape: shape(variant),
    scale: 1, // Larger scale to cover more area
    speed: 0.2,
    style: {
      position: 'absolute' as const,
      inset: 0,
      width: '100%',
      height: '100%',
      // opacity: variant === 'hero' ? 0.6 : 0.4,
    },
  };

  return (
    <div
      className={`absolute inset-0 ${className}`}
      style={{
        pointerEvents: 'none',
        // zIndex: -1, // Behind everything including header
      }}
    >
      <GrainGradient
        {...sharedProps}
        colors={variant === 'hero' ? heroColors : demoColors}
        offsetX={offsetX(variant)} // Push to the right
        offsetY={offsetY(variant)} // Push to the top
        rotation={rotation(variant)} // Angle from top-right
      />
    </div>
  );
}
